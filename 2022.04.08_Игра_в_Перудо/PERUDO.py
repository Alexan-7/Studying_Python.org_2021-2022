from tkinter import * # модуль графического интерфейса - импортируем всё
import random, time

def bros(): # функция для броска
    x = random.choice(['b1.png', 'b2.png', 'b3.png',
                      'b4.png', 'b5.png', 'b6.png'])
    return x

def img(event): # Пропишем параметр event, чтобы его принять
    global b1, b2 # глобальные переменные, чтобы отображались картинки
    for i in range(18): # цикл, чтобы после каждого клика картинки перебирались
        '''для первой метки b1'''
        b1 = PhotoImage(file = (bros())) # вызываем класс PhotoImage для чтения картинки и...
        '''для второй метки b2'''
        b2 = PhotoImage(file = (bros())) # ...в параметр file передаём файл из функции (bros())
        lab1['image'] = b1 # обращаемся к ранее созданным меткам lab1 и lab2
        lab2['image'] = b2 # все их атрибуты хранятся в словаре
        root.update() # необходимо обновить окно, чтобы цикл работал
        time.sleep(0.12) # программа будет ждать указанное время

root = Tk() # определяем главное окно
root.geometry('400x200') # геометрия окна
root.title('ПЕРУДО. Загадай число и сделай бросок!') # надпись в заголовке
root.resizable(height = False, width = False) # чтобы не растягивалось окно
root.iconphoto(True, PhotoImage(file = ('iconka.png'))) # изображение иконки в левом верхнем углу
font = PhotoImage(file = ('holst.png')) # размещение картинки холста (игральный стол)
Label(root, image = font).pack() # записываем метку. Первый аргумент - на окне root

lab1 = Label(root) # вызов Label через переменную, ...(1)
lab1.place(relx = 0.3, rely = 0.5, anchor = CENTER) # метод .place - точное расположение по x и y, якорь
'''
anchor = CENTER означает, что центр метки будет размещаться по координатам,
указанным в relx и rely. Может принимать значения n (север - вверх), e (восток - правая сторона),
s (юг - низ), w (запад - левая сторона), ne, nw, se, sw, c (center - по центру)
'''
lab2 = Label(root) # (1)... чтобы потом к ней обратиться
lab2.place(relx = 0.7, rely = 0.5, anchor = CENTER) # метод .place - точное расположение по x и y, якорь

root.bind('<1>', img) # обработчик событий передаёт в функцию аргумент, т.е. координаты, где кликнули мышкой
img('event') # вместо меток - сразу перебор картинок
root.mainloop() # замыкаем цикл нашего окна
